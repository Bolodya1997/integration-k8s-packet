---
name: ci
on: pull_request
jobs:
  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v1
        with:
          config_file: .yamllint.yml
          strict: true
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: fkautz/shell-linter@v1.0.1
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.31
  excludeFmtErrorf:
    name: exclude fmt.Errorf
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Exclude fmt.Errorf
        run: |
          if grep -r --include=*.go --exclude=*.pb.go fmt.Errorf . ; then
           echo "Please use errors.Errorf (or errors.New or errors.Wrap or errors.Wrapf) as appropriate rather than fmt.Errorf"
           exit 1
          fi
  checkgomod:
    name: check go.mod and go.sum
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - run: go mod tidy
      - name: Check for changes in go.mod or go.sum
        run: |
          git diff --name-only --exit-code go.mod || ( echo "Run go tidy" && false )
          git diff --name-only --exit-code go.sum || ( echo "Run go tidy" && false )
  gogenerate:
    name: Check generated files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-protoc@master
        with:
          version: '3.8.0'
      - uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Install proto-gen-go
        run: go get -u github.com/golang/protobuf/protoc-gen-go@v1.3.3
      - name: Install proto-gen-go
        run: go get github.com/searKing/golang/tools/cmd/go-syncmap
      - name: Generate files
        run: go generate ./...
      - name: Check for changes in generated code
        run: |
          git diff -- '*.pb.go' || ( echo "Rerun go generate ./... locally and resubmit" && false )
          git diff -- '*.gen.go' || ( echo "Rerun go generate ./... locally and resubmit" && false )
